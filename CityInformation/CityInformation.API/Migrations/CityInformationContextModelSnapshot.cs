// <auto-generated />
using CityInformation.API.Contexts.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInformation.API.Migrations
{
    [DbContext(typeof(CityInformationContext))]
    partial class CityInformationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("CityInformation.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "For a cheapish haircut in a communist-free haven.",
                            Name = "Duluth"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Next to Duluth, we're Superior.",
                            Name = "Superior"
                        });
                });

            modelBuilder.Entity("CityInformation.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "A rather uncommon vertical lift bridge.",
                            Name = "Aerial Lift Bridge"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "A three-story pavilion featuring broken glass and the smell of urine.",
                            Name = "Enger Tower"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "As featured in Diners, Drive-Ins and Dives.",
                            Name = "Anchor Bar & Grill"
                        });
                });

            modelBuilder.Entity("CityInformation.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInformation.API.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInformation.API.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
